apiVersion: apps/v1
kind: Deployment
metadata:
  name: apigateway
  labels:
    {{- include "apigateway.labels" . | nindent 4}}
    app.kubernetes.io/component: apigateway
spec:
  replicas: {{ .Values.apigateway.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: apigateway
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: apigateway
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      terminationGracePeriodSeconds: 0
      containers:
        - name: apigateway
          image: {{ .Values.apigateway.image }}
          env:
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: jwt-secret
                  key: jwt_secret
            - name: SONGS_HOST
              valueFrom:
                secretKeyRef:
                  name: hosts-secrets
                  key: songs_host
            - name: SUPPORT_HOST
              valueFrom:
                secretKeyRef:
                  name: hosts-secrets
                  key: support_host
            - name: MESSAGES_HOST
              valueFrom:
                secretKeyRef:
                  name: hosts-secrets
                  key: messages_host
            - name: USERS_HOST
              valueFrom:
                secretKeyRef:
                  name: hosts-secrets
                  key: users_host
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 1
            httpGet:
              path: /
              port: 3000
          livenessProbe:
            initialDelaySeconds: 10
            periodSeconds: 1
            httpGet:
              path: /
              port: 3000